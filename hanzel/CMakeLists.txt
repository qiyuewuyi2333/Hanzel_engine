cmake_minimum_required(VERSION 3.0.0)
project(hanzel VERSION 0.1.0 LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 20)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ../../libs)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
# set(RUNTIME_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
# set(LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
# set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS on)
set( OUTPUT_NAME ${PROJECT_NAME})

file(GLOB src_files CONFIGURE_DEPENDS src/*.cpp)

add_library(${PROJECT_NAME} SHARED ${src_files})

target_include_directories(${PROJECT_NAME} PRIVATE include)
target_include_directories(${PROJECT_NAME} PRIVATE vendor\\spdlog\\include)

target_compile_definitions(${PROJECT_NAME} PRIVATE HZ_PLATFORM_WINDOWS)
target_compile_definitions(${PROJECT_NAME} PRIVATE HZ_BUILD_DLL)
target_compile_definitions(${PROJECT_NAME} PRIVATE _SILENCE_STDEXT_ARR_ITERS_DEPRECATION_WARNING )

# set_target_properties(${PROJECT_NAME} PROPERTIES
#     LINKER_LANGUAGE CXX
#     PREFIX ""
#     RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}  # 明确设置运行时输出目录
#     LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}  # 明确设置库输出目录
#     ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
#     OUTPUT_NAME ${PROJECT_NAME}
# )

file(GLOB DLL_FILES CONFIGURE_DEPENDS ../libs/*.dll)
message(${CMAKE_SOURCE_DIR}/../application/build)

# 遍历所有 DLL 文件并创建复制命令
foreach(DLL_FILE ${DLL_FILES})
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy
        ${DLL_FILE} 
       ${CMAKE_CURRENT_SOURCE_DIR}/../application/build)
endforeach()
